service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write;
    }
  }
  // match /databases/{database}/documents {
  //   function isSignedIn() {
  //     return request.auth.uid != null;
  //   }

  //   function isDocumentCreator() {
  //     return request.auth.uid == resource.data.creatorUserId;
  //   }

  //   function areSetsEqual(list1, list2) {
  //     return list1.hasAll(list2) && list2.hasAll(list1);
  //   }

  //   function isFieldSame(field) {
  //     return request.resource.data[field] == resource.data[field];
  //   }

  //   function isFieldMissingOrSame(field) {
  //     return request.resource.data[field] == null || isFieldSame(field);
  //   }

  //   match /songs/{songId} {
  //     // TODO(mdanka): creation time should be restricted to server time
  //     function isSongCreateAllowed() {
  //       return areSetsEqual(request.resource.data.keys(), ["artist", "content", "creationTime", "creatorUserId", "title"])
  //         && request.resource.data.creatorUserId == request.auth.uid;  // creating own document
  //     }

  //     function isSongUpdateAllowed() {
  //       return ["creationTime", "creatorUserId", "artist", "content", "title"].hasAll(request.writeFields)  // only these fields are included
  //         && isFieldMissingOrSame("creationTime")
  //         && isFieldMissingOrSame("creatorUserId");
  //     }

  //     allow read;
  //     allow create: if isSignedIn() && isSongCreateAllowed();
  //     allow update: if isDocumentCreator() && isSongUpdateAllowed();
  //     allow delete: if isDocumentCreator();
  //   }
  // }
}